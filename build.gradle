buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.researchgate:gradle-release:2.3.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

plugins {
    id 'net.researchgate.release' version '2.3.5'
}

allprojects {
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'com.jfrog.bintray'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    bintray {
        dryRun = false // Whether to run this as dry-run, without deploying
        publish = false //If version should be auto published after an upload

        user = project.hasProperty('bintrayUser') ? bintrayUser : ''
        key = project.hasProperty('bintrayApiKey') ? bintrayApiKey : ''
        configurations = ['archives']
        pkg {
            name = 'kafka-metamorph'
            repo = 'maven'
            userOrg = 'researchgate'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/researchgate/kafka-metamorph.git'
            issueTrackerUrl = 'https://github.com/researchgate/kafka-metamorph/issues'
        }
    }

    configurations {
        testArtifacts.extendsFrom testRuntime
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task testJar(type: Jar) {
        classifier "test"
        from sourceSets.test.output
    }

    artifacts {
        archives sourcesJar, javadocJar
        testArtifacts testJar
    }
}

project(':metamorph-kafka-08') {
    dependencies {
        compile project(':metamorph-common')
        compile 'org.apache.kafka:kafka_2.11:0.8.2.2'

        testCompile project(path: ':metamorph-common', configuration: 'testArtifacts')
        testCompile 'org.apache.kafka:kafka_2.11:0.8.2.2:test'
        testCompile 'org.apache.kafka:kafka-clients:0.8.2.2'
    }
}

project(':metamorph-kafka-09') {
    dependencies {
        compile project(':metamorph-common')
        compile 'org.apache.kafka:kafka_2.11:0.9.0.1'

        testCompile project(path: ':metamorph-common', configuration: 'testArtifacts')

        testCompile 'info.batey.kafka:kafka-unit:0.4'

        testCompile 'org.apache.kafka:kafka_2.11:0.9.0.1'
        testCompile 'org.apache.kafka:kafka_2.11:0.9.0.1:test'
        testCompile 'org.apache.kafka:kafka-clients:0.9.0.1'
    }
}

project(':metamorph-kafka-010') {
    dependencies {
        compile project(':metamorph-common')
        compile 'org.apache.kafka:kafka_2.11:0.10.0.1'

        testCompile project(path: ':metamorph-common', configuration: 'testArtifacts')

        testCompile 'info.batey.kafka:kafka-unit:0.4'

        testCompile 'org.apache.kafka:kafka_2.11:0.10.0.1'
        testCompile 'org.apache.kafka:kafka_2.11:0.10.0.1:test'
        testCompile 'org.apache.kafka:kafka-clients:0.10.0.1'
    }
}


task build {}

beforeReleaseBuild.dependsOn subprojects.install
afterReleaseBuild.dependsOn subprojects.bintrayUpload
